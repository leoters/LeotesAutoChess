import { ArraySchema, MapSchema, Schema, SetSchema } from "@colyseus/schema";
import BotManager from "../../core/bot-manager";
import Simulation from "../../core/simulation";
import { FloatingItem } from "../../models/colyseus-models/floating-item";
import Player from "../../models/colyseus-models/player";
import { PokemonAvatarModel } from "../../models/colyseus-models/pokemon-avatar";
import { Portal, SynergySymbol } from "../../models/colyseus-models/portal";
import Shop from "../../models/shop";
import { EloRank } from "../../types/Config";
import { GameMode, GamePhaseState } from "../../types/enum/Game";
import { Item } from "../../types/enum/Item";
import { Pkm } from "../../types/enum/Pokemon";
import { SpecialGameRule } from "../../types/enum/SpecialGameRule";
import { Weather } from "../../types/enum/Weather";
import { TownEncounter } from "../../core/town-encounters";
import { Wanderer } from "../../types/enum/Wanderer";
export default class GameState extends Schema {
    afterGameId: string;
    roundTime: number;
    phase: GamePhaseState;
    players: MapSchema<Player, string>;
    avatars: MapSchema<PokemonAvatarModel, string>;
    floatingItems: MapSchema<FloatingItem, string>;
    portals: MapSchema<Portal, string>;
    symbols: MapSchema<SynergySymbol, string>;
    additionalPokemons: ArraySchema<Pkm>;
    stageLevel: number;
    weather: Weather;
    shinyEncounter: boolean;
    noElo: boolean;
    gameMode: GameMode;
    spectators: SetSchema<string>;
    simulations: MapSchema<Simulation, string>;
    lightX: number;
    lightY: number;
    specialGameRule: SpecialGameRule | null;
    townEncounter: TownEncounter | null;
    time: number;
    updatePhaseNeeded: boolean;
    botManager: BotManager;
    shop: Shop;
    simulationPaused: boolean;
    gameFinished: boolean;
    gameLoaded: boolean;
    name: string;
    startTime: number;
    endTime: number | undefined;
    preparationId: string;
    townEncounters: Set<TownEncounter>;
    pveRewards: Item[];
    pveRewardsPropositions: Item[];
    minRank: EloRank | null;
    maxRank: EloRank | null;
    wanderers: Map<string, Wanderer>;
    constructor(preparationId: string, name: string, noElo: boolean, gameMode: GameMode, minRank: EloRank | null, maxRank: EloRank | null, specialGameRule: SpecialGameRule | null);
}
